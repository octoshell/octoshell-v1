# coding: utf-8
class Report::Organization < ActiveRecord::Base
  SUBDIVISION_CUTS = {
    'биологический факультет'                                  => 'био.фак-т',
    'научно-исследовательский вычислительный центр (НИВЦ)'     => 'НИВЦ',
    'научно-исследовательский институт ядерной физики (НИИЯФ)' => 'НИИЯФ',
    'химический факультет'                                     => 'хим.фак-т',
    'НИИ механики'                                             => 'НИИ Мех.',
    'геологический факультет'                                  => 'геол.фак-т',
    'экономический факультет'                                  => 'эко.фак-т',
    'физический факультет'                                     => 'физ.фак-т',
    'факультет вычислительной математики и кибернетики'        => 'ВМиК',
    'географический факультет'                                 => 'геогр.фак-т',
    'институт физико-химической биологии имени А.Н. Белозерского (НИИФХБ)' => 'НИИФХБ',
    'механико-математический факультет'                        => 'мех-мат.фак-т',
    'государственный астрономический институт (ГАИШ)'          => 'ГАИШ',
    'физико-химический факультет'                              => 'физ-хим.фак-т',
    'международный лазерный центр'                             => 'лазерный центр',
    'факультет фундаментальной медицины'                       => 'мед.фак-т',
    'институт теоретических проблем микромира'                 => 'ИТПМ',
    'кафедра физической культуры'                              => 'физк.каф.',
    'факультет наук о материалах'                              => 'фак-т наук о материалах',
    'факультет биоинженерии и биоинформатики'                  => 'фак-т биоинж. и биоинф.'
  } 
  
  belongs_to :report

  has_paper_trail
  
  TYPES = [
    'Российский ВУЗ',
    'Институт РАН',
    'Российская коммерческая компания',
    'Зарубежная организация',
    'Другое'
  ]

  with_options on: :update do |m|
    m.validates :organization_id, :subdivision, :organization_type, presence: true
    m.validates :position, presence: true, unless: proc { |o| o.other_position? }
    m.validates :organization_type, inclusion: { in: TYPES }
  end

  attr_accessible :organization_id, :subdivision, :position, :organization_type,
    :other_position
    
  def cutted_subdivision
    normal = subdivision.supernormalize
    SUBDIVISION_CUTS[normal] || normal
  end
end
