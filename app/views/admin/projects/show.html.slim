- title @project.title

- if may? :manage, :projects
  div class="well"
    - if @project.active?
      = link_to [:admin, @project, :synch], class: 'btn btn-success', method: :put do
        i class="icon-refresh"
        |  Синхронизировать
      |  
    = link_to 'Версии', [:admin, @project, :versions], class: 'btn'
    |  
    = link_to Project.human_state_event_name(:close), admin_project_close_path(@project), method: :put, class: "btn btn-warning #{'disabled' unless @project.can_close?}", data: { confirm: 'Вы уверены?' }
    |  
    = link_to Project.human_state_event_name(:erase), admin_project_erase_path(@project), method: :put, class: "btn btn-danger #{'disabled' unless @project.can_erase?}", data: { confirm: 'Вы уверены?' }


- if @project.closed?
  div class="lead well text-error"
    strong Проект закрыт

- if @project.disabled?
  div class="lead well text-error"
    strong Проект отключен. (Не прошел перерегистрацию)
    |  
    = link_to "Включить", [:admin, @project, :enable], method: :put

- unless @project.filled?
  div class="lead well text-error"
    strong Профиль проекта на заполнен

legend Карточка

blockquote
  h4 = Project::Card.human_attribute_name :name
  p = @project.card.name

  h4 = Project::Card.human_attribute_name :driver
  p = @project.card.driver

  h4 = Project::Card.human_attribute_name :strategy
  p = @project.card.strategy

  h4 = Project::Card.human_attribute_name :objective
  p = @project.card.objective

  h4 = Project::Card.human_attribute_name :impact
  p  = @project.card.impact

  h4 = Project::Card.human_attribute_name :usage
  p  = @project.card.usage

legend Доступы к ресурсам

div class="row"
  div class="span6"
    table class="table"
      - Cluster.with_state(:active).order('name').each_with_index do |cluster, i|
        - request = @project.requests.without_state(:closed).find_by_cluster_id(cluster.id)
        tr class="#{'without-top-border' if i == 0} #{(request && request.active?) ? 'success' : 'warning'}"
          td
            = cluster.name
            - if request
              = smart_link_to request, nil, class: "pull-right"

legend Участники проекта

table class="table"
  thead
    tr
      th Пользователь
      th Логины
      th Доступ
      th Доступ на кластеры
  tbody
    - have_requests = @project.requests.with_state(:active).any?
    - @project.accounts.sort_by { |a| a.denied? ? 1 : 0 }.each do |account|
      tr class="#{account.allowed? ? (account.active? ? 'success' : 'warning') : 'striped'}"
        td class="span4"
          = render_status_icon(account.allowed? && account.active?)
          = link_to_if (may?(:manage, :projects)), account.user.full_name, [:admin, account.user], class: "#{"muted" if account.denied?}"
          - if account.user == @project.user
            |  
            i class="icon-flag muted" title="Руководитель проекта"
        td
          div role="login-changer-current"
            code = account.login
            - if may?(:manage, :projects)
              |  
              = link_to [:admin, account, :change], class: "muted" do
                i class="icon-pencil"
        td
          = render_status_icon(account.allowed?)
        td
          - if may?(:manage, :projects)
            div class="block-account-form-opener"
              small = link_to "заблокировать", "#", role: "block-account-form-opener"
          
          - if account.active?
            span class="label label-success" = account.human_cluster_state_name
          - if account.closed?
            span class="label label-important" = account.human_cluster_state_name
          - unless have_requests
            |  
            small (Нет доступных ресурсов)
          
          - faults = Fault.where(reference_id: account.id, kind_of_block: :account).order("id")
          - if faults.any?
            ul class="unstyled"
              - faults.each do |f|
                li
                  = link_to f.description, [:admin, f], target: "_blank"
                  |  
                  span class="label #{f.actual? ? "label-important" : "label-success"}" = f.human_state_name
          
          - if may? :manage, :projects
            div class="block-account-form"
              = form_tag [:admin, account, :block], method: :post do
                div = text_area_tag :description, nil, placeholder: "Описание проблемы", rows: 2, class: "input-xlarge"
                button class="btn btn-mini btn-danger" type="submit" data-confirm="Вы уверены?"
                  | Заблокировать
          
    - unregistered_members = @project.unregistered_members
    - unregistered_members.each do |sm|
      tr class="striped"
        td colspan="2"
          = render_status_icon false
          = sm.full_name
          br
          small
            = link_to 'Код приглашения', '#', data: { content: "<code>#{sm.account_code.code}</code>" }, role: 'project-invite-code-viewer'
            |  отправлен на #{sm.email}
        td
          span class="label label-important" Закрыт
          |  
          small (Не зарегистрирован)

- sureties = @project.sureties.reorder('id asc')
- if sureties.any?
  legend Поручительства
  div class="row"
    div class="span6"
      table class="table"
        - sureties.each_with_index do |surety, i|
          - state = { active: 'success', confirmed: 'warning', declined: 'error', generated: 'warning' }[surety.state_name]
          tr class="#{'without-top-border' if i == 0} #{state}"
            td class="span4" style="padding-bottom: 0;"
              = render_status_icon surety.active?
              = link_to "Поручительство ##{surety.id}", [:admin, surety]
            td style="#{'padding-bottom: 0;' unless surety.generated? && surety.has_loaded_scan?}"
              span class="label label-#{state}" = surety.human_state_name
          - unless surety.generated? && surety.has_loaded_scan?
            tr class="without-top-border #{state}"
              td colspan="2" style="padding-top: 0;"

legend Поддержка
= render partial: 'admin/tickets/table', locals: { tickets: @project.tickets }

- if may? :manage, :projects
  legend Блокировка проекта

  - faults = Fault.where(reference_id: @project.id, kind_of_block: :project).order("id")
  - if faults.any?
    ul class="unstyled"
      - faults.each do |f|
        li
          = link_to f.description, [:admin, f], target: "_blank"
          |  
          span class="label #{f.actual? ? "label-important" : "label-success"}" = f.human_state_name

  = form_tag [:admin, @project, :block], method: :post do
    div = text_area_tag :description, nil, class: "input-xlarge", rows: 2, placeholder: "Причина блокировки"
    button class="btn btn-small btn-danger" type="submit" data-confirm="Вы уверены?"
      | Заблокировать

  legend Смена руководителя

  = form_tag [:admin, @project, :move_to], method: :put do
    div class="input-append"
      = text_field_tag :user_id, nil, data: { "source-url" => users_path(format: :json) }, placeholder: "ФИО или email", role: 'instant-submit', type: 'search', class: 'input-xlarge'
      button class="btn" type="submit"
        i class="icon-arrow-right"

    p class="muted"
      | Создается доступ выбранному пользователю и он становится руководителем.
      br
      | Прошлый руководитель становится обычным участником проекта.
